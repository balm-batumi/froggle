Просмотр объявлений. Нужно ли добавлять кнопки для взаимодействия (например, "Связаться")

При отклонении или удалении объявления автор не уведомляется. Это может ухудшить UX

Рефакторинг медиа: Создать утилитную функцию для отправки фото/видео/медиа-групп, чтобы избежать дублирования.

Таблица favorites:
Содержит только ссылки: user_id (ForeignKey на users.id) и advertisement_id (ForeignKey на advertisements.id).
Удаление объявлений:
При удалении хозяином или админом объявление не удаляется физически из базы, а меняет статус на deleted.
Объявления со статусом deleted не показываются в общем просмотре (ads_handler.py), но остаются доступными в "Избранном" для пользователей, добавивших их.
Срок жизни:
Объявления имеют срок жизни 3 месяца в "Избранном" (или в базе?), после чего удаляются из базы отдельным скриптом чистки.

В функциях обработки ввода, таких как process_ad_title и process_ad_description, нет проверки на максимальную длину текста

Повторение кода для отправки медиа (admin_handler.py, ads_handler.py, menu_handler.py)

! Обработка медиа-групп в process_ad_media (ad_handler.py)
Проблема: В функции process_ad_media для обработки медиа-групп используется задержка await asyncio.sleep(1) для определения последнего файла в группе. Это ненадёжно, так как Telegram может отправлять файлы с разными интервалами, и 1 секунда может быть недостаточно или избыточно. Это может привести к пропуску файлов или некорректному переходу к следующему шагу.
Последствия: Если файлы приходят с задержкой больше 1 секунды, группа может быть разделена.
Лишние вызовы _send_contact_options при каждом файле в группе.
Рекомендация: Использовать media_group_id и таймер с накоплением всех файлов группы перед переходом, либо дождаться сигнала от Telegram (например, через ожидание всех сообщений с одинаковым media_group_id).

Пересмотреть шаг "Контакты" для всех категорий: Сделать обязательными (без пропуска, "Назад" сбрасывает процесс)

При вываливании обов при просмотре и тд - режим сайлэнса.