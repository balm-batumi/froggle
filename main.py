# main.py
# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ Froggle
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from loguru import logger
from config import BOT_TOKEN
from database import init_db
from handlers.ads_handler import ads_router
from handlers.menu_handler import menu_router
from handlers.ad_handler import ad_router
from handlers.admin_handler import admin_router
from states import AdsViewForm
from data.constants import get_main_menu_keyboard
from aiogram.fsm.context import FSMContext

logger.add("logs/froggle.log", rotation="10MB", compression="zip", level="DEBUG")

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher(storage=MemoryStorage())

# Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è callback-–∑–∞–ø—Ä–æ—Å–æ–≤
async def log_callback_middleware(handler, event: types.CallbackQuery, data: dict):
    logger.debug(f"–ü–æ–ª—É—á–µ–Ω callback: data={event.data}, from_id={event.from_user.id}, current_state={await data['state'].get_state()}")
    return await handler(event, data)

dp.callback_query.outer_middleware(log_callback_middleware)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_handler(message: types.Message, state: FSMContext):
    telegram_id = str(message.from_user.id)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º message_id
    menu_message = await message.answer(
        "üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –ù–µ—Ç",
        reply_markup=get_main_menu_keyboard()
    )
    await state.update_data(initial_message_id=menu_message.message_id)
    await state.set_state(AdsViewForm.select_category)
    logger.info(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è telegram_id={telegram_id}, message_id={menu_message.message_id}")

async def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ Froggle...")
    await init_db()
    dp.include_router(ads_router)
    logger.debug("–ü–æ–¥–∫–ª—é—á–µ–Ω ads_router")
    dp.include_router(menu_router)
    logger.debug("–ü–æ–¥–∫–ª—é—á–µ–Ω menu_router")
    dp.include_router(ad_router)
    logger.debug("–ü–æ–¥–∫–ª—é—á–µ–Ω ad_router")
    dp.include_router(admin_router)
    logger.debug("–ü–æ–¥–∫–ª—é—á–µ–Ω admin_router")
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º polling...")
    await dp.start_polling(bot, skip_updates=True)

if __name__ == "__main__":
    asyncio.run(main())