from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto, InputMediaVideo
from database import Advertisement
from loguru import logger
from database import mark_ad_as_viewed
from data.categories import CATEGORIES
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–º–æ—â—å" –∏ "–ù–∞–∑–∞–¥" –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def get_navigation_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="action:help"),
         InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="action:back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


# tools/utils.py
# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤—Å–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≥—Ä—É–ø–ø–∞–º–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ message_id
async def render_ad(ad: Advertisement, bot: Bot, chat_id: int, show_status: bool = False,
                    buttons: list[InlineKeyboardButton] = None, mark_viewed: bool = False):
    message_ids = []

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏
    msg1 = await bot.send_message(chat_id=chat_id, text=f"*****       –û–±—ä—è–≤–ª–µ–Ω–∏–µ #{ad.id}       *****")
    message_ids.append(msg1.message_id)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞
    if ad.media_file_ids:
        # –†–∞–∑–¥–µ–ª—è–µ–º –º–µ–¥–∏–∞ –Ω–∞ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ
        photos = [media for media in ad.media_file_ids if media["type"] == "photo"]
        videos = [media for media in ad.media_file_ids if media["type"] == "video"]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É —Ñ–æ—Ç–æ (–¥–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
        if photos:
            media_group = [InputMediaPhoto(media=photo["id"]) for photo in photos[:10]]
            photo_msgs = await bot.send_media_group(chat_id=chat_id, media=media_group)
            message_ids.extend(msg.message_id for msg in photo_msgs)
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ —Ñ–æ—Ç–æ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è #{ad.id}, message_ids={[msg.message_id for msg in photo_msgs]}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –≤–∏–¥–µ–æ (–¥–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
        if videos:
            media_group = [InputMediaVideo(media=video["id"]) for video in videos[:10]]
            video_msgs = await bot.send_media_group(chat_id=chat_id, media=media_group)
            message_ids.extend(msg.message_id for msg in video_msgs)
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è #{ad.id}, message_ids={[msg.message_id for msg in video_msgs]}")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å –∂–∏—Ä–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    ad_text = f"<b>{CATEGORIES[ad.category]['display_name']}</b> –≤ {ad.city}\n"
    ad_text += f"üè∑Ô∏è {', '.join(ad.tags)}\n" if ad.tags else ""
    ad_text += f"üìå <b>{ad.title_ru}</b>\n" if ad.title_ru else ""
    ad_text += f"{ad.description_ru}\n" if ad.description_ru else ""
    ad_text += f"üí∞ {ad.price}\n" if ad.price else "üí∞ –±–µ–∑ —Ü–µ–Ω—ã\n"
    ad_text += f"üìû {ad.contact_info}\n" if ad.contact_info else ""
    if show_status:
        ad_text += f"–°—Ç–∞—Ç—É—Å: {ad.status}"

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons) if buttons else None
    logger.debug(f"Buttons –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {buttons}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    msg3 = await bot.send_message(chat_id=chat_id, text=ad_text, reply_markup=keyboard, parse_mode="HTML")
    message_ids.append(msg3.message_id)

    # –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    if mark_viewed and ad.id:
        await mark_ad_as_viewed(str(chat_id), ad.id)

    return message_ids